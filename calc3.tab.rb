#
# DO NOT MODIFY!!!!
# This file is automatically generated by Racc 1.4.11
# from Racc grammer file "".
#

require 'racc/parser.rb'

#
# generated by racc
#
require './calc3.rex'

class Calculator3 < Racc::Parser

module_eval(<<'...end calc3.racc/module_eval...', 'calc3.racc', 275)

...end calc3.racc/module_eval...
##### State transition tables begin ###

racc_action_table = [
   100,    99,    49,    98,    41,    42,     4,    43,    41,    42,
   111,    43,    41,    42,    56,    43,    55,     6,    39,   110,
    41,    42,    39,    43,   101,    77,    39,    27,    28,    78,
    56,    30,    55,    75,    26,    59,    60,    31,    29,    25,
    27,    28,    41,    42,    30,    43,    74,    26,    59,    60,
    31,    29,    25,    27,    28,    70,    71,    30,    72,    52,
    26,    16,    17,    31,    29,    25,    27,    28,    68,    69,
    30,    67,    49,    26,    46,    86,    31,    29,    25,    27,
    28,    87,    88,    30,   108,    45,    26,    90,    91,    31,
    29,    25,    27,    28,    92,    93,    30,    94,    95,    26,
    76,    52,    31,    29,    25,    27,    28,    44,    35,    30,
    15,    15,    26,    12,    11,    31,    29,    25,    27,    28,
   105,   107,    30,    33,    10,    26,     9,     6,    31,    29,
    25,    27,    28,     7,   112,    30,   nil,   nil,    26,   nil,
   nil,    31,    29,    25,    27,    28,   nil,   nil,    30,   109,
   nil,    26,   nil,   nil,    31,    29,    25,    27,    28,   nil,
   nil,    30,    82,    83,    26,   nil,   nil,    31,    29,    25,
    27,    28,   nil,   nil,    30,   nil,   nil,    26,   nil,   nil,
    31,    29,    25,    63,    64,    66,    65 ]

racc_action_check = [
    77,    77,    75,    77,    39,    39,     0,    39,    26,    26,
   106,    26,    58,    58,    35,    58,    35,     0,    39,   106,
    62,    62,    26,    62,    77,    52,    58,   102,   102,    53,
    53,   102,    53,    47,   102,    84,    84,   102,   102,   102,
    94,    94,    55,    55,    94,    55,    46,    94,    38,    38,
    94,    94,    94,    36,    36,    45,    45,    36,    45,    31,
    36,    13,    13,    36,    36,    36,    83,    83,    44,    44,
    83,    44,    30,    83,    29,    59,    83,    83,    83,   103,
   103,    60,    61,   103,   103,    28,   103,    63,    64,   103,
   103,   103,    16,    16,    65,    66,    16,    73,    74,    16,
    50,    76,    16,    16,    16,    81,    81,    27,    25,    81,
    17,    12,    81,    10,     7,    81,    81,    81,    18,    18,
    95,   101,    18,    18,     6,    18,     4,     2,    18,    18,
    18,    80,    80,     1,   111,    80,   nil,   nil,    80,   nil,
   nil,    80,    80,    80,   104,   104,   nil,   nil,   104,   104,
   nil,   104,   nil,   nil,   104,   104,   104,    57,    57,   nil,
   nil,    57,    57,    57,    57,   nil,   nil,    57,    57,    57,
    56,    56,   nil,   nil,    56,   nil,   nil,    56,   nil,   nil,
    56,    56,    56,    40,    40,    40,    40 ]

racc_action_pointer = [
    -1,   133,   109,   nil,   104,   nil,   116,   114,   nil,   nil,
    90,   nil,   103,    37,   nil,   nil,    83,   102,   109,   nil,
   nil,   nil,   nil,   nil,   nil,    99,    -1,    77,    55,    51,
    64,    51,   nil,   nil,   nil,    -1,    44,   nil,    22,    -5,
   155,   nil,   nil,   nil,    59,    46,    38,     8,   nil,   nil,
    75,   nil,    -5,    15,   nil,    33,   161,   148,     3,    49,
    54,    58,    11,    57,    58,    64,    65,   nil,   nil,   nil,
   nil,   nil,   nil,    73,    66,    -6,    93,    -9,   nil,   nil,
   122,    96,   nil,    57,     9,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,    31,   109,   nil,   nil,   nil,   nil,
   nil,   112,    18,    70,   135,   nil,   -15,   nil,   nil,   nil,
   nil,   125,   nil ]

racc_action_default = [
    -2,   -63,    -1,    -3,   -63,    -6,   -63,   -63,    -4,    -5,
   -63,   113,   -63,   -63,    -8,   -10,   -63,   -63,   -63,   -11,
   -13,   -14,   -15,   -16,   -17,   -63,   -63,   -63,   -63,   -63,
   -63,   -63,    -9,    -7,   -12,   -63,   -27,   -25,   -63,   -63,
   -63,   -32,   -33,   -34,   -63,   -63,   -63,   -49,   -60,   -62,
   -50,   -51,   -53,   -63,   -19,   -63,   -63,   -63,   -63,   -63,
   -63,   -27,   -63,   -35,   -36,   -63,   -63,   -41,   -42,   -43,
   -44,   -45,   -46,   -63,   -63,   -63,   -63,   -63,   -18,   -20,
   -63,   -22,   -23,   -63,   -26,   -27,   -29,   -30,   -28,   -31,
   -38,   -37,   -39,   -40,   -63,   -63,   -61,   -52,   -54,   -55,
   -56,   -63,   -21,   -63,   -63,   -48,   -63,   -58,   -24,   -47,
   -57,   -63,   -59 ]

racc_goto_table = [
    34,    18,    48,    51,    36,    54,    80,    14,     3,    73,
     8,    53,    32,    89,    84,    62,    13,    61,    47,    50,
     2,    57,   106,    79,     1,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,    85,   nil,   nil,    34,
   nil,    81,   nil,   nil,   nil,   nil,   nil,    96,    97,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,    34,   nil,   102,   nil,   nil,   103,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   104,
   nil,   nil,   nil,   nil,    34,    34,    34 ]

racc_goto_check = [
     8,     6,    27,    25,    17,    15,    16,     7,     3,    22,
     3,    14,     7,    16,    19,    21,     5,    17,    23,    24,
     2,     6,    26,    15,     1,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,    17,   nil,   nil,     8,
   nil,     6,   nil,   nil,   nil,   nil,   nil,    27,    25,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,     8,   nil,     6,   nil,   nil,     6,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,     6,
   nil,   nil,   nil,   nil,     8,     8,     8 ]

racc_goto_pointer = [
   nil,    24,    20,     8,   nil,     4,   -15,    -5,   -18,   nil,
   nil,   nil,   nil,   nil,   -24,   -30,   -49,   -22,   nil,   -44,
   nil,   -25,   -37,   -12,   -12,   -28,   -79,   -28 ]

racc_goto_default = [
   nil,   nil,   nil,   nil,     5,   nil,   nil,   nil,    19,    20,
    21,    22,    23,    24,   nil,   nil,    40,   nil,    37,    38,
    58,   nil,   nil,   nil,   nil,   nil,   nil,   nil ]

racc_reduce_table = [
  0, 0, :racc_error,
  1, 36, :_reduce_none,
  0, 36, :_reduce_2,
  1, 37, :_reduce_none,
  2, 37, :_reduce_none,
  2, 37, :_reduce_5,
  1, 38, :_reduce_none,
  7, 39, :_reduce_7,
  1, 40, :_reduce_none,
  3, 40, :_reduce_none,
  1, 42, :_reduce_10,
  1, 41, :_reduce_11,
  2, 41, :_reduce_12,
  1, 43, :_reduce_13,
  1, 43, :_reduce_none,
  1, 43, :_reduce_none,
  1, 43, :_reduce_none,
  1, 43, :_reduce_none,
  4, 48, :_reduce_18,
  1, 49, :_reduce_none,
  2, 49, :_reduce_20,
  3, 50, :_reduce_21,
  2, 50, :_reduce_22,
  4, 47, :_reduce_23,
  6, 47, :_reduce_24,
  1, 52, :_reduce_none,
  3, 52, :_reduce_26,
  1, 54, :_reduce_none,
  3, 54, :_reduce_28,
  2, 55, :_reduce_29,
  2, 55, :_reduce_30,
  3, 53, :_reduce_31,
  1, 51, :_reduce_32,
  1, 51, :_reduce_33,
  1, 51, :_reduce_34,
  1, 56, :_reduce_35,
  1, 56, :_reduce_36,
  2, 56, :_reduce_37,
  2, 56, :_reduce_38,
  2, 56, :_reduce_39,
  2, 56, :_reduce_40,
  3, 46, :_reduce_41,
  3, 46, :_reduce_42,
  3, 46, :_reduce_43,
  3, 46, :_reduce_none,
  3, 46, :_reduce_none,
  3, 46, :_reduce_none,
  6, 45, :_reduce_47,
  3, 57, :_reduce_48,
  2, 44, :_reduce_49,
  2, 44, :_reduce_50,
  1, 59, :_reduce_none,
  3, 59, :_reduce_52,
  1, 60, :_reduce_53,
  3, 60, :_reduce_54,
  3, 60, :_reduce_55,
  3, 60, :_reduce_56,
  5, 60, :_reduce_57,
  1, 61, :_reduce_58,
  3, 61, :_reduce_59,
  1, 58, :_reduce_none,
  3, 58, :_reduce_61,
  1, 62, :_reduce_62 ]

racc_reduce_n = 63

racc_shift_n = 113

racc_token_table = {
  false => 0,
  :error => 1,
  :UMINUS => 2,
  "*" => 3,
  "/" => 4,
  "+" => 5,
  "-" => 6,
  :exp => 7,
  :WORD => 8,
  :SGNL => 9,
  :VAR => 10,
  :ARRAY => 11,
  :NUMBER => 12,
  :TOKENDEF => 13,
  :TOKENEND => 14,
  :TOKENELSE => 15,
  :TOKENIF => 16,
  :TOKENCASE => 17,
  :TOKFUNCTION => 18,
  :TOKENVAR => 19,
  :TOKENFOREACH => 20,
  :TOKENSWITCH => 21,
  "\\n" => 22,
  "(" => 23,
  ")" => 24,
  "," => 25,
  "&" => 26,
  "|" => 27,
  "<" => 28,
  ">" => 29,
  "=" => 30,
  "!" => 31,
  ":" => 32,
  "[" => 33,
  "]" => 34 }

racc_nt_base = 35

racc_use_result_var = true

Racc_arg = [
  racc_action_table,
  racc_action_check,
  racc_action_default,
  racc_action_pointer,
  racc_goto_table,
  racc_goto_check,
  racc_goto_default,
  racc_goto_pointer,
  racc_nt_base,
  racc_reduce_table,
  racc_token_table,
  racc_shift_n,
  racc_reduce_n,
  racc_use_result_var ]

Racc_token_to_s_table = [
  "$end",
  "error",
  "UMINUS",
  "\"*\"",
  "\"/\"",
  "\"+\"",
  "\"-\"",
  "exp",
  "WORD",
  "SGNL",
  "VAR",
  "ARRAY",
  "NUMBER",
  "TOKENDEF",
  "TOKENEND",
  "TOKENELSE",
  "TOKENIF",
  "TOKENCASE",
  "TOKFUNCTION",
  "TOKENVAR",
  "TOKENFOREACH",
  "TOKENSWITCH",
  "\"\\\\n\"",
  "\"(\"",
  "\")\"",
  "\",\"",
  "\"&\"",
  "\"|\"",
  "\"<\"",
  "\">\"",
  "\"=\"",
  "\"!\"",
  "\":\"",
  "\"[\"",
  "\"]\"",
  "$start",
  "target",
  "translation_unit",
  "declaration_unit",
  "function_definition",
  "arguments",
  "body",
  "argument",
  "body_unit",
  "definition_unit",
  "foreach_block",
  "operations",
  "condition_block",
  "switch_block",
  "when_block",
  "when_item",
  "compar_item",
  "condition",
  "condition_unit",
  "condition_item",
  "logic_tokin",
  "compar_logic",
  "tmp_var",
  "def_list",
  "var_list",
  "var_item",
  "set_items",
  "def_item" ]

Racc_debug_parser = false

##### State transition tables end #####

# reduce 0 omitted

# reduce 1 omitted

module_eval(<<'.,.,', 'calc3.racc', 18)
  def _reduce_2(val, _values, result)
     0 
    result
  end
.,.,

# reduce 3 omitted

# reduce 4 omitted

module_eval(<<'.,.,', 'calc3.racc', 24)
  def _reduce_5(val, _values, result)
     
    result
  end
.,.,

# reduce 6 omitted

module_eval(<<'.,.,', 'calc3.racc', 33)
  def _reduce_7(val, _values, result)
          p 'debug: function definition finded'
      file = File.new('./' + val[1] + '.h', 'w')
      file.puts "void " + val[1] + "(signal_t s) {\n\tint i;\n "+val[5]+"\n} "
      file.close
    
    result
  end
.,.,

# reduce 8 omitted

# reduce 9 omitted

module_eval(<<'.,.,', 'calc3.racc', 47)
  def _reduce_10(val, _values, result)
          $SymTable.push(val[0], 'SGNL', nil, nil, nil)
      result = val[0]
    
    result
  end
.,.,

module_eval(<<'.,.,', 'calc3.racc', 54)
  def _reduce_11(val, _values, result)
          p "debug: body_unit finded - " + val[0]
    
    result
  end
.,.,

module_eval(<<'.,.,', 'calc3.racc', 58)
  def _reduce_12(val, _values, result)
          result =  "\t" + val[0] +"\n\t" + val[1]
      p "debug: body body_unit finded -"+ result +"\n"

    
    result
  end
.,.,

module_eval(<<'.,.,', 'calc3.racc', 68)
  def _reduce_13(val, _values, result)
          p "debug: definition_unit fined - #{val[0]}\n"
    
    result
  end
.,.,

# reduce 14 omitted

# reduce 15 omitted

# reduce 16 omitted

# reduce 17 omitted

module_eval(<<'.,.,', 'calc3.racc', 79)
  def _reduce_18(val, _values, result)
          result = "switch(#{val[1]}) {\n\t#{val[2]}\n\t}" 
    
    result
  end
.,.,

# reduce 19 omitted

module_eval(<<'.,.,', 'calc3.racc', 86)
  def _reduce_20(val, _values, result)
          result = "#{val[0]} \n\t#{val[1]}" 
    
    result
  end
.,.,

module_eval(<<'.,.,', 'calc3.racc', 92)
  def _reduce_21(val, _values, result)
          result = "case #{val[1]}: \n\t#{val[2]}\n\tbreak;" 
    
    result
  end
.,.,

module_eval(<<'.,.,', 'calc3.racc', 96)
  def _reduce_22(val, _values, result)
          result = "case default: \n\t#{val[1]}\n\tbreak;"
    
    result
  end
.,.,

module_eval(<<'.,.,', 'calc3.racc', 102)
  def _reduce_23(val, _values, result)
        result = "if(#{val[1]}) {\n\t\t#{val[2]}\n\t}"
   
    result
  end
.,.,

module_eval(<<'.,.,', 'calc3.racc', 106)
  def _reduce_24(val, _values, result)
        result = "if(#{val[1]}) {\n\t\t#{val[2]}\n\t}\n\telse {\n\t\t#{val[4]}\n\t}"
   
    result
  end
.,.,

# reduce 25 omitted

module_eval(<<'.,.,', 'calc3.racc', 113)
  def _reduce_26(val, _values, result)
         result = "#{val[0]} #{val[1]} #{val[2]}"
   
    result
  end
.,.,

# reduce 27 omitted

module_eval(<<'.,.,', 'calc3.racc', 118)
  def _reduce_28(val, _values, result)
     result = "(#{val[1]})"
    result
  end
.,.,

module_eval(<<'.,.,', 'calc3.racc', 122)
  def _reduce_29(val, _values, result)
     result = "&&"
    result
  end
.,.,

module_eval(<<'.,.,', 'calc3.racc', 123)
  def _reduce_30(val, _values, result)
     result = "||"
    result
  end
.,.,

module_eval(<<'.,.,', 'calc3.racc', 128)
  def _reduce_31(val, _values, result)
          result = "#{val[0]} #{val[1]} #{val[2]}" 
   
    result
  end
.,.,

module_eval(<<'.,.,', 'calc3.racc', 132)
  def _reduce_32(val, _values, result)
     result = $SymTable.get_by_name(val[0]).translate_to 
    result
  end
.,.,

module_eval(<<'.,.,', 'calc3.racc', 133)
  def _reduce_33(val, _values, result)
     result = val[0] 
    result
  end
.,.,

module_eval(<<'.,.,', 'calc3.racc', 134)
  def _reduce_34(val, _values, result)
     result = val[0].to_s 
    result
  end
.,.,

module_eval(<<'.,.,', 'calc3.racc', 137)
  def _reduce_35(val, _values, result)
     result = '<'
    result
  end
.,.,

module_eval(<<'.,.,', 'calc3.racc', 138)
  def _reduce_36(val, _values, result)
     result = '>'
    result
  end
.,.,

module_eval(<<'.,.,', 'calc3.racc', 139)
  def _reduce_37(val, _values, result)
    result = '>='
    result
  end
.,.,

module_eval(<<'.,.,', 'calc3.racc', 140)
  def _reduce_38(val, _values, result)
    result = '<='
    result
  end
.,.,

module_eval(<<'.,.,', 'calc3.racc', 141)
  def _reduce_39(val, _values, result)
    result = '!='
    result
  end
.,.,

module_eval(<<'.,.,', 'calc3.racc', 142)
  def _reduce_40(val, _values, result)
    result = '=='
    result
  end
.,.,

module_eval(<<'.,.,', 'calc3.racc', 147)
  def _reduce_41(val, _values, result)
          sym = $SymTable.get_by_name(val[0])
      result = "#{sym.translate_to} = #{val[2].to_s};" 
    
    result
  end
.,.,

module_eval(<<'.,.,', 'calc3.racc', 152)
  def _reduce_42(val, _values, result)
          sym1 = $SymTable.get_by_name(val[0])
      sym2 = $SymTable.get_by_name(val[2])
      result = "#{sym1.translate_to} = #{sym2.translate_to};" 
    
    result
  end
.,.,

module_eval(<<'.,.,', 'calc3.racc', 158)
  def _reduce_43(val, _values, result)
          sym1 = $SymTable.get_by_name(val[0])
      result = "#{sym1.translate_to} = #{val[2]};" 
    
    result
  end
.,.,

# reduce 44 omitted

# reduce 45 omitted

# reduce 46 omitted

module_eval(<<'.,.,', 'calc3.racc', 171)
  def _reduce_47(val, _values, result)
        values = val[2].split(',')
    arr = $SymTable.get_by_name(values[1])
    result = "for (i=0; i<#{arr.var};i++){\n\t#{val[4]}\n\t}"
    $SymTable.remove_by_name(values[0])
    p "debug: foreach_block finded for array - #{val[4]}"
  
    result
  end
.,.,

module_eval(<<'.,.,', 'calc3.racc', 181)
  def _reduce_48(val, _values, result)
        $SymTable.push(val[0], 'SGNL', nil, "signalTable[#{val[2]}[i]]", 0)
    result = val[0] + ',' + val[2]
  
    result
  end
.,.,

module_eval(<<'.,.,', 'calc3.racc', 188)
  def _reduce_49(val, _values, result)
          result = "enum {\n\t\t#{val[1]}\n\t};"
      p "debug: DEFTOKEN def_list  - %s #{result}\n"
    
    result
  end
.,.,

module_eval(<<'.,.,', 'calc3.racc', 193)
  def _reduce_50(val, _values, result)
          result = val[1]
      p "debug: TOKENVAR var_list  - %s #{result}\n"
    
    result
  end
.,.,

# reduce 51 omitted

module_eval(<<'.,.,', 'calc3.racc', 201)
  def _reduce_52(val, _values, result)
          result = "#{val[0]}\n\t#{val[2]}"
    
    result
  end
.,.,

module_eval(<<'.,.,', 'calc3.racc', 207)
  def _reduce_53(val, _values, result)
          $SymTable.push(val[0], 'VAR', nil, nil, 0)
      result = "int #{val[0]} = 0;"
    
    result
  end
.,.,

module_eval(<<'.,.,', 'calc3.racc', 212)
  def _reduce_54(val, _values, result)
          $SymTable.push(val[0], 'VAR', nil, nil, val[2])
      result = "int #{val[0]} = #{val[2].to_s};"
    
    result
  end
.,.,

module_eval(<<'.,.,', 'calc3.racc', 217)
  def _reduce_55(val, _values, result)
          $SymTable.push(val[0], 'VAR', nil, nil, $SymTable.get_by_name(val[2]).var)
      result = "int #{val[0]} = #{val[2]};"
    
    result
  end
.,.,

module_eval(<<'.,.,', 'calc3.racc', 222)
  def _reduce_56(val, _values, result)
          s = $SymTable.get_by_name(val[2])
      $SymTable.push(val[0], 'VAR', nil, nil, s.var)    
      result = "int #{val[0]} = #{s.translate_to};"
    
    result
  end
.,.,

module_eval(<<'.,.,', 'calc3.racc', 228)
  def _reduce_57(val, _values, result)
          $SymTable.push(val[0], 'ARRAY', nil, nil, val[3].split(',').size)    
      result = "int #{val[0]}[] = {#{val[3]}};"
    
    result
  end
.,.,

module_eval(<<'.,.,', 'calc3.racc', 235)
  def _reduce_58(val, _values, result)
          result = val[0]
      p "debug: SGNL  - #{result}\n"  
    
    result
  end
.,.,

module_eval(<<'.,.,', 'calc3.racc', 241)
  def _reduce_59(val, _values, result)
          result = val[0] + ', ' + val[2]
      p "debug: set_items SGNL  - #{result}\n"  
    
    result
  end
.,.,

# reduce 60 omitted

module_eval(<<'.,.,', 'calc3.racc', 249)
  def _reduce_61(val, _values, result)
          result = "#{val[0]},\n\t\t#{val[2]}"
    
    result
  end
.,.,

module_eval(<<'.,.,', 'calc3.racc', 255)
  def _reduce_62(val, _values, result)
          number = signals_number(val[0])
      if number.nil?
       raise "\nSyntaxError: #{@filename}:#{lineno} Сигнал с именем '#{val[0]}' не определен в таблице сигналов\n"
      end
      result = val[0] + " = " + number.to_s
      p "debug: def_item WORD - #{val[0]} \n"
      # смотреть из файла номер сигнала
      $SymTable.push(val[0], 'SGNL', nil, "signalTable[#{val[0]}]", number)
    
    result
  end
.,.,

def _reduce_none(val, _values, result)
  val[0]
end

end   # class Calculator3


calc = Calculator3.new
@filename = ARGV.shift
begin
  calc.scan_file @filename
rescue Exception
  puts $!
end
